{"version":3,"sources":["components/navbar/haiku-seeklogo.com.svg","components/auth/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/contents/UserHome/CreateHaiku/HaikuService.js","components/contents/UserHome/UserHome.js","components/contents/UserHome/CreateHaiku/CreateHaiku.js","components/contents/UserHome/MyProfile/Myprofile.js","components/contents/UserHome/GenerateHaiku/GenerateHaiku.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","signup","username","password","email","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","src","logo","alt","height","Link","to","style","textDecoration","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","onSubmit","type","placeholder","onChange","Login","HaikuService","add","line1","line2","line3","getAll","console","log","err","UserHome","haikus","AllHaikus","map","haiku","idx","key","creatorId","CreateHaiku","checkHaiku","line1check","a","b","c","result","checkLine","a1","a2","length","every","v","i","syllables","sentence","count","split","val","word","toLowerCase","replace","match","Myprofile","GenerateHaiku","App","userObj","fetchUser","Fragment","userInSession","Route","exact","path","render","Redirect","Switch","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10a4f4d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/haiku-seeklogo.com.2a75c61d.svg\";","// auth/auth-service.js\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:3010/api/auth',\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email) => {\n    return this.service.post('/signup', {username, password, email})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport \"./Navbar.css\"\nimport logo from './haiku-seeklogo.com.svg';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <img src={logo} alt=\"\" height=\"60\"/>\n          <Link to=\"/home\" style={{ textDecoration: 'none' }}>Home</Link> <br></br>\n\n\n          <Link to=\"/createhaiku\" style={{ textDecoration: 'none' }}>Create Haiku</Link> <br></br>\n\n          <Link to=\"/generatehaiku\" style={{ textDecoration: 'none' }}>Generate Haiku</Link> <br></br>\n        \n          <Link to=\"/myprofile\" style={{ textDecoration: 'none' }}>{this.state.loggedInUser.username}</Link> <br></br>\n\n          <a onClick={this.handleLogout}>Logout</a>\n\n\n\n          <div className=\"header\">\n            {/* <img src={logo} alt=\"\" height=\"100\"/> */}\n            {/* <h2>Welcome {this.state.loggedInUser.username}</h2> */}\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n\n\n              <img src={logo} alt=\"\" height=\"60\"/>\n\n\n                <Link to=\"/signup\" style={{ textDecoration: 'none' }}>Signup</Link>\n\n                <Link to=\"/login\" style={{ textDecoration: 'none' }}>Login</Link>\n\n            \n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', email: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            email:\"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        email: email,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        {/* <h3>Welcome!, create your account next:</h3> */}\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" placeholder=\"Matsuo Bashō\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            <label>Email:</label>\n            <input type=\"email\" name=\"email\" placeholder=\"Matsuo@Haikulover.com\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" placeholder=\"******\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Click here and take out your writer inside\" />\n        </form>\n\n        <h4>{this.state.error ? 'Oups! Something went wrong!' : ''}</h4>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" placeholder='Matsuo Bashō' value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n        \n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" placeholder='******' value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Click here and take out your writer inside\" />\n      </form>\n\n      <h4>{this.state.error ? 'Incorrect user or password' : ''}</h4>\n    </div>)\n  }\n}\n\nexport default Login;","import axios from 'axios';\n\nclass HaikuService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:3010/haikus',\n      withCredentials: true\n    });\n  }\n\n  add = (name, line1, line2, line3) => {\n    return this.service.post('/add', {name, line1, line2, line3})\n    .then(response => response.data)\n  }\n\n  getAll = () => {\n    console.log(\"hola\")\n    return this.service.get('/all/Haikus')\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n}\n\nexport default HaikuService;","import React, { Component } from \"react\";\n// import CreateHaiku from \"./components/contents/CreateHaiku/CreateHaiku\";\n// import EditHaiku from \"./components/contents/EditHaiku/EditHaiku\";\nimport \"./UserHome.css\";\nimport HaikuService from \"./CreateHaiku/HaikuService\";\n\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass UserHome extends Component {\n  constructor() {\n    super()\n    this.state = { haikus : []}\n    this.service = new HaikuService()\n    }\n\n    componentDidMount(){\n      this.service.getAll()\n      .then(AllHaikus =>{\n        this.setState({\n          ...this.state,\n          haikus : AllHaikus.haikus\n      })\n    }\n      )\n}\n\n  \n\n  render() {\n    console.log(this.state.haikus)\n    return (\n      <div>\n        <h1>All Haikus</h1>\n        <div className=\"home\">\n        {this.state.haikus.map((haiku, idx) => {\n          return <div className=\"haikus\" key={idx}>\n            <h3>{haiku.name}</h3>\n            <h4>Created by: {haiku.creatorId.username}</h4>\n            <p>{haiku.line1}</p>\n            <p>{haiku.line2}</p>\n            <p>{haiku.line3}</p>\n            </div>\n        })}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserHome;\n","import React, { Component } from 'react'\nimport HaikuService from './HaikuService'\nimport \"./CreateHaiku.css\"\n\n\nexport default class CreateHaiku extends Component {\n  constructor() {\n    super();\n    this.state = { \n      name: '',\n      line1: '',\n      line2: '',\n      line3: '',\n      line1check:''\n     };\n      this.service = new HaikuService()\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value, line1check : event.target.value });\n  }\n\n  handleFormSubmit = (event) => {\n    \n    event.preventDefault();\n\n  \n    const name = this.state.name;\n    const line1 = this.state.line1;\n    const line2 = this.state.line2;\n    const line3 = this.state.line3;\n    console.log(this.checkHaiku(line1, line2, line3));\n    if(this.checkHaiku(line1, line2, line3)=== true) {\n      //console.log(\"Esto no es un haiku muchacho\")\n\n      this.service.add(name, line1, line2, line3)\n      .then( response => {\n          this.setState({\n              name: \"\", \n              line1: \"\",\n              line2: \"\",\n              line3: \"\",\n          });\n          \n      })\n      .catch(error => {\n        this.setState({\n          name: name,\n          line1: line1,\n          line2: line2,\n          line3: line3\n        });\n      })\n     \n    \n    } else {\n\n      this.setState({\n        name: name,\n        line1: line1,\n        line2: line2,\n        line3: line3\n      });\n      \n    }\n    \n  }\n  // checkSyl(){\n  //   this.state.line1check.split(' ').forEach(word=>{\n  //      word = word.toLowerCase();\n  //     if(word.length <= 3) { return 1; }\n  //       word = word.replace(/(?:[^laeiouy]|ed|[^laeiouy]e)$/, '');\n  //       word = word.replace(/^y/, '');\n  //       console.log(word.match(/[aeiouy]{1,2}/g).length);\n  //   })\n  // }\n\n  // new_count(word) { \n  //   let sylArray = []\n  //   word = word.toLowerCase();                                     //word.downcase!\n  //   if(word.length <= 3) { return 1; }                             //return 1 if word.length <= 3\n  //     word = word.replace(/(?:[^laeiouy]|ed|[^laeiouy]e)$/, '');   //word.sub!(/(?:[^laeiouy]es|ed|[^laeiouy]e)$/, '')\n  //     word = word.replace(/^y/, '');                                 //word.sub!(/^y/, '')\n  //     return word.match(/[aeiouy]{1,2}/g).length;                    //word.scan(/[aeiouy]{1,2}/).size\n  // }\n\n\n\n\n  checkHaiku(line1, line2,line3) {\n\n    // console.log(haiku(\"The blue sky walker\", \"it is possible to see\", \"if you are a monkey\"))\n\n\n    return haiku(line1, line2, line3);\n\n      function syllables(word) {\n      word = word.toLowerCase();\n      if(word.length <= 3) { return 1; }\n        return word.replace(/(?:[^laeiouy]es|ed|lle|[^laeiouy]e)$/, '')\n                   .replace(/^y/, '')\n                   .match(/[aeiouy]{1,2}/g).length;\n    }\n\n    function checkLine(sentence){\n      var count = 0;\n      var words = sentence.split(\" \");\n      \n      words.map(function(val, key){\n        count += syllables(val)\n      });\n      \n      return count;\n      \n    }\n    function haiku(a, b, c){\n      \n      if(!a || !b || !c){\n        return {result: false, error: \"Invalid input. Call haiku(line1, line2, line3)\"}\n      }\n      \n     let  result = [checkLine(a), checkLine(b), checkLine(c)];\n     let expected = [5, 7, 5];\n      \n      if(arrayCompare(result, expected)){\n        return true;\n      }\n      \n      return {result: false, syllables:result};\n    }\n    function arrayCompare(a1, a2){\n      return a1.length===a2.length && a1.every(function(v,i) { return v === a2[i]})\n    }\n    \n  }\n\n  render() {\n   this.checkHaiku()\n    return (\n      <div className=\"haikuform\">\n        <form onSubmit= {(event) => this.handleFormSubmit(event)}>\n\n        <fieldset>\n          <label>Name of your Haiku: </label> <br></br>\n          <input type=\"text\" name=\"name\" value={this.state.name} placeholder=\"Give a name to your Haiku\" onChange= {(e) => this.handleChange(e)}/>\n        </fieldset>\n\n        <fieldset>\n          <label>Line 1: </label>\n          <input type=\"text\" name=\"line1\" value={this.state.line1} placeholder=\"It begins with five\"  onChange= {(e) => this.handleChange(e)}/>\n        </fieldset>\n\n        <fieldset>\n          <label>Line 2: </label>\n          <input type=\"text\" name=\"line2\" value={this.state.line2} placeholder=\"Then seven in the middle\" onChange= {(e) => this.handleChange(e)}/>\n        </fieldset>\n\n        <fieldset>\n          <label>Line 3: </label>\n          <input type=\"text\" name=\"line3\"  value={this.state.line3} placeholder=\"Five again to end\" onChange= {(e) => this.handleChange(e)}/>\n        </fieldset>\n\n        <input type=\"submit\" value=\"Create Haiku\" />\n      </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Myprofile extends Component {\n  \n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class GenerateHaiku extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport UserHome from \"./components/contents/UserHome/UserHome\";\nimport CreateHaiku from \"./components/contents/UserHome/CreateHaiku/CreateHaiku\";\nimport Myprofile from \"./components/contents/UserHome/MyProfile/Myprofile\";\nimport GenerateHaiku from \"./components/contents/UserHome/GenerateHaiku/GenerateHaiku\";\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends Component {\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n    this.fetchUser();\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n              <Route exact path=\"/createhaiku\" render={() => <CreateHaiku />} />\n              <Route\n                exact\n                path=\"/generatehaiku\"\n                render={() => <GenerateHaiku />}\n              />\n              <Route exact path=\"/myprofile\" render={() => <Myprofile />} />\n              <Redirect to=\"/home\" />\n              <Route exact path=\"/home\" render={() => <UserHome />} />\n            </header>\n            {/* <UserHome /> */}\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <div className=\"home\">\n              <div className=\"hometext\">\n                <h1>Welcome to Hey Haiku!</h1>\n\n                <h3>\n                  Create, share, enjoy it,<br></br> a new world awaits for you,\n                  <br></br> Hey Haiku is here.\n                </h3>\n\n                <h5>\n                  Feeling the inspiration? Log in or sign up below to start\n                  creating your best haikus!\n                </h5>\n              </div>\n              <div className=\"login\">\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/signup\"\n                    render={() => <Signup getUser={this.getUser} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/login\"\n                    render={() => <Login getUser={this.getUser} />}\n                  />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}